{"version":3,"file":"frontend.js","mappings":"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","sources":["webpack://search-tracker/./src/api/api.js","webpack://search-tracker/webpack/bootstrap","webpack://search-tracker/webpack/runtime/define property getters","webpack://search-tracker/webpack/runtime/hasOwnProperty shorthand","webpack://search-tracker/webpack/runtime/make namespace object","webpack://search-tracker/./src/frontend.js"],"sourcesContent":["/**\n * API functions for Search Query Tracker\n */\n\n/**\n * Fetch search data from the server\n * \n * @returns {Promise<Object>} Search queries and clicks data\n */\nexport const fetchSearchData = async () => {\n    try {\n        const response = await fetch(ajaxurl, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/x-www-form-urlencoded',\n            },\n            body: new URLSearchParams({\n                action: 'sqt_get_data',\n                nonce: sqtData.nonce\n            })\n        });\n\n        if (!response.ok) {\n            throw new Error(`HTTP error! Status: ${response.status}`);\n        }\n\n        const data = await response.json();\n        \n        if (data.success) {\n            return {\n                searchQueries: data.data.searchQueries || {},\n                searchClicks: data.data.searchClicks || {}\n            };\n        } else {\n            throw new Error(data.data || 'Failed to fetch search data');\n        }\n    } catch (error) {\n        console.error('Error fetching search data:', error);\n        throw error;\n    }\n};\n\n/**\n * Track a click on a search result\n * \n * @param {string} query The search query\n * @param {string} url The clicked URL\n * @returns {Promise<void>}\n */\nexport const trackClick = async (query, url) => {\n    try {\n        // Determine the correct AJAX URL to use\n        const ajaxURL = typeof sqtData !== 'undefined' ? sqtData.ajaxurl : \n                       (typeof ajaxurl !== 'undefined' ? ajaxurl : '/wp-admin/admin-ajax.php');\n        \n        console.log('Search Query Tracker: Sending click data to', ajaxURL);\n        console.log('Search Query Tracker: Query:', query, 'URL:', url);\n        \n        await fetch(ajaxURL, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/x-www-form-urlencoded',\n            },\n            body: new URLSearchParams({\n                action: 'sqt_track_click',\n                query,\n                url,\n                nonce: typeof sqtData !== 'undefined' ? sqtData.nonce : ''\n            })\n        });\n        \n        console.log('Search Query Tracker: Click tracked successfully');\n    } catch (error) {\n        console.error('Search Query Tracker: Error tracking click:', error);\n    }\n}; ","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/**\n * Search Query Tracker - Frontend Tracker\n * \n * Tracks clicks on search results\n */\nimport { trackClick } from './api/api';\n\ndocument.addEventListener('DOMContentLoaded', () => {\n    // Get the search query from URL\n    const urlParams = new URLSearchParams(window.location.search);\n    const searchQuery = urlParams.get('s');\n    \n    // If we're on a search page with a query\n    if (searchQuery) {\n        console.log('Search Query Tracker: Tracking search results for query:', searchQuery);\n        \n        // Find all search result links using more generic selectors\n        // This covers most WordPress themes' search result structures\n        const searchResultLinks = document.querySelectorAll([\n            '.search-results article a', // Standard theme structure\n            '.search-result a',          // Common class\n            '.search-result-item a',     // Our original selector\n            '.post-item a',              // Common for posts in search\n            '.entry-title a',            // Title links in search results\n            '.search .post a',           // General post links in search context\n            'article.post a',            // Article links\n            '.search article a',         // Any link in an article within search\n            '.search-post a'             // Another common class\n        ].join(', '));\n        \n        console.log('Search Query Tracker: Found', searchResultLinks.length, 'potential search result links');\n        \n        if (searchResultLinks.length === 0) {\n            // If no links found with specific selectors, try a more generic approach\n            // This is a fallback that might catch more links but could include non-result links\n            console.log('Search Query Tracker: No specific search result links found, trying generic approach');\n            \n            // Get the main content area (most themes have a main content container)\n            const mainContent = document.querySelector([\n                'main',\n                '#main',\n                '#content',\n                '.content',\n                'article',\n                '.site-main',\n                '.content-area'\n            ].join(', '));\n            \n            if (mainContent) {\n                // Only get links within the main content area to avoid tracking navigation/sidebar links\n                searchResultLinks = mainContent.querySelectorAll('a[href]:not([href^=\"#\"]):not([href^=\"javascript\"])');\n                console.log('Search Query Tracker: Found', searchResultLinks.length, 'links in main content area');\n            }\n        }\n        \n        // Attach click handlers to all found links\n        searchResultLinks.forEach(link => {\n            link.addEventListener('click', (e) => {\n                const url = link.getAttribute('href');\n                console.log('Search Query Tracker: Tracking click on:', url);\n                \n                // Track the click\n                trackClick(searchQuery, url);\n            });\n        });\n    }\n}); "],"names":["fetchSearchData","response","fetch","ajaxurl","method","headers","body","URLSearchParams","action","nonce","sqtData","ok","Error","status","data","json","success","searchQueries","searchClicks","error","console","trackClick","query","url","ajaxURL","log","document","addEventListener","urlParams","window","location","search","searchQuery","get","searchResultLinks","querySelectorAll","join","length","mainContent","querySelector","forEach","link","e","getAttribute"],"sourceRoot":""}